[{"C:\\Users\\Ajay\\OneDrive\\Desktop\\pizza-frontend-1\\src\\index.js":"1","C:\\Users\\Ajay\\OneDrive\\Desktop\\pizza-frontend-1\\src\\App.js":"2","C:\\Users\\Ajay\\OneDrive\\Desktop\\pizza-frontend-1\\src\\reportWebVitals.js":"3","C:\\Users\\Ajay\\OneDrive\\Desktop\\pizza-frontend-1\\src\\register.js":"4","C:\\Users\\Ajay\\OneDrive\\Desktop\\pizza-frontend-1\\src\\pages\\LoginPage.jsx":"5","C:\\Users\\Ajay\\OneDrive\\Desktop\\pizza-frontend-1\\src\\containers\\header.jsx":"6","C:\\Users\\Ajay\\OneDrive\\Desktop\\pizza-frontend-1\\src\\pages\\Registration.jsx":"7","C:\\Users\\Ajay\\OneDrive\\Desktop\\pizza-frontend-1\\src\\pages\\UserDashboard.jsx":"8","C:\\Users\\Ajay\\OneDrive\\Desktop\\pizza-frontend-1\\src\\resources\\AppData.jsx":"9","C:\\Users\\Ajay\\OneDrive\\Desktop\\pizza-frontend-1\\src\\pages\\Cart.jsx":"10","C:\\Users\\Ajay\\OneDrive\\Desktop\\pizza-frontend-1\\src\\pages\\AdminLoginPage.jsx":"11","C:\\Users\\Ajay\\OneDrive\\Desktop\\pizza-frontend-1\\src\\pages\\Loader.jsx":"12"},{"size":500,"mtime":499162500000,"results":"13","hashOfConfig":"14"},{"size":907,"mtime":1609643162934,"results":"15","hashOfConfig":"14"},{"size":362,"mtime":499162500000,"results":"16","hashOfConfig":"14"},{"size":509,"mtime":1609217786671,"results":"17","hashOfConfig":"14"},{"size":4582,"mtime":1611365956458,"results":"18","hashOfConfig":"14"},{"size":1070,"mtime":1611320691827,"results":"19","hashOfConfig":"14"},{"size":3232,"mtime":1611383781269,"results":"20","hashOfConfig":"14"},{"size":3716,"mtime":1609833180522,"results":"21","hashOfConfig":"14"},{"size":540,"mtime":1609251034614,"results":"22","hashOfConfig":"14"},{"size":3454,"mtime":1610290338279,"results":"23","hashOfConfig":"14"},{"size":2673,"mtime":1609948065539,"results":"24","hashOfConfig":"14"},{"size":334,"mtime":1611320848664,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1xpxo6z",{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"28"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"28"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"28"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"C:\\Users\\Ajay\\OneDrive\\Desktop\\pizza-frontend-1\\src\\index.js",[],["56","57"],"C:\\Users\\Ajay\\OneDrive\\Desktop\\pizza-frontend-1\\src\\App.js",["58"],"import logo from './logo.svg';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './register'\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Header from \"./containers/header\";\nimport Login from \"./pages/LoginPage\";\nimport Register from \"./pages/Registration\";\nimport Dashboard from \"./pages/UserDashboard\";\nimport Cart from \"./pages/Cart\"\nimport AdminLoginPage from \"./pages/AdminLoginPage\"\n\nfunction App() {\n  return (\n    <Router>\n      <div>\n        <Header />\n        <Switch>\n          <Route path=\"/\" exact strict component={Login}/>\n          <Route path=\"/registration\" component={Register}/>\n          <Route path=\"/dashboard\" component={Dashboard}/>\n          <Route path=\"/cart\" component={Cart}/>\n          <Route path=\"admin-login\" componenet={AdminLoginPage}/>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","C:\\Users\\Ajay\\OneDrive\\Desktop\\pizza-frontend-1\\src\\reportWebVitals.js",[],"C:\\Users\\Ajay\\OneDrive\\Desktop\\pizza-frontend-1\\src\\register.js",["59","60"],"import React, { useState, useEffect } from \"react\";\r\n\r\n\r\nconst Login = () =>{\r\n    useEffect(() => {\r\n        let url = \"https:localhost:5000/login\"\r\n        fetch(url,{\r\n            method: 'GET',\r\n            headers:{\r\n                'Accept':'Application/JSON',\r\n                'content-type': 'Application/json'\r\n            }\r\n        }).then((result)=>{\r\n            result.json().then((resp)=>{\r\n                console.log(resp)\r\n            })\r\n        })\r\n    },[])\r\n}\r\n\r\n\r\n\r\nexport default Login","C:\\Users\\Ajay\\OneDrive\\Desktop\\pizza-frontend-1\\src\\pages\\LoginPage.jsx",["61","62"],"import React, { useState } from 'react';\r\nimport Axios from 'axios';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Form, Button,Row, Col, Spinner, Alert } from \"react-bootstrap\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Loader from \"./Loader\"\r\n//import { Snackbar, Alert } from \"material-ui\";\r\n\r\n\r\n\r\nconst Login = ()=>{\r\n    const history = useHistory();\r\n    const handleRegister = () => {\r\n        history.push('/Registration');\r\n    }\r\n    const [ email, setEmail ] = useState('');\r\n    const [ password, setPassword ] = useState('');\r\n    const [loader,setLoader]=useState(false);\r\n    const [err,setErr]=useState();\r\n    const handleChange = event =>{\r\n        //console.log(event.target.name, event.target.value);\r\n        if(event.target.name===\"email\"){\r\n            setEmail(event.target.value)\r\n        }else{\r\n            setPassword(event.target.value)\r\n        }\r\n    }\r\n    const handleLogin = async event =>{\r\n        setLoader(true);\r\n        // const resp = Axios.post('http:localhost:5000/login',{\r\n        //     email:email,\r\n        //     password:password\r\n        // })\r\n        //const url = \"https\"\r\n        await Axios({\r\n            method: 'Post',\r\n            url: 'https://pizza-backend-1.herokuapp.com/login',\r\n            //baseURL: 'http:localhost:5000',\r\n            data: {\r\n                email:email,\r\n                password:password\r\n            }\r\n          }).then(response => {\r\n              if(response.data && response.data.message === \"Login Success\"){\r\n                history.push(\"/dashboard\");\r\n              }\r\n              else{\r\n                setLoader(false);\r\n                  alert(\"check passowrd or mail\")\r\n              }\r\n            console.log(response,\"response\");\r\n          }).catch(err => {\r\n            setLoader(false)\r\n              alert(\"login unsuccessful\")\r\n              console.log(err, 'err');\r\n          })\r\n      \r\n        //console.log(email,password);\r\n    }\r\n\r\n    const handlePassword = async event => {\r\n        await Axios({\r\n            method: 'Post',\r\n            url: 'https://pizza-backend-1.herokuapp.com/forgot-password',\r\n            //baseURL: 'http:localhost:5000',\r\n            data: {\r\n                email:email\r\n            }\r\n          }).then(response => {\r\n            // console.log(response.data)\r\n              if(response.data){\r\n                  \r\n                history.push(\"/dashboard\");\r\n              }\r\n            console.log(response,\"response\");\r\n          }).catch(err => {\r\n            //   alert(\"login unsuccessful\")\r\n              console.log(err, 'err');\r\n          })\r\n      \r\n        //console.log(email,password);\r\n    }\r\n\r\n    \r\n\r\n    return(\r\n    <div class=\"container\">\r\n        <div>\r\n            <h1 className=\"text-center\">User Login</h1>\r\n            <Form.Group as={Row} controlId=\"formBasicEmail\" className=\"text-right margin-vertical-sm login\">\r\n                <Form.Label column sm=\"3\" >Email:</Form.Label>\r\n                    <Col sm=\"6\">\r\n                        <Form.Control type=\"text\" placeholder=\"Enter email\" name=\"email\" onChange={event => handleChange( event )} />\r\n                    </Col>\r\n            </Form.Group>\r\n\r\n            <Form.Group as={Row} controlId=\"formBasicPassword\"  className=\"text-right margin-vertical-sm login\">\r\n                <Form.Label column sm=\"3\">Password:</Form.Label>\r\n                    <Col sm=\"6\">\r\n                        <Form.Control type=\"password\" placeholder=\"Password\" name=\"password\" onChange={event => handleChange( event )} />\r\n                    </Col>\r\n            </Form.Group>\r\n            <Row >\r\n                <Col sm={{ span:2, offset:3}}>\r\n                    <Button block variant=\"primary\" type=\"login\" onClick={event => handleLogin( event )}>\r\n                    {/* <Spinner animation=\"grow\" variant=\"success\" /> */}\r\n                    Login\r\n                    </Button>\r\n                    {loader?<Loader/>:null}\r\n                    {err && <Alert message={err} variant='danger' />}\r\n                </Col>\r\n                \r\n                <Col sm=\"2\">\r\n                    <Button block variant=\"success\" type=\"register\" onClick={event => handleRegister( event )}>\r\n                        Register\r\n                    </Button></Col>\r\n                <Col sm=\"2\">\r\n                    <Button block variant=\"danger\" type=\"forgot-password\" onClick={event => handlePassword( event )}>Forgot password</Button>\r\n                </Col>\r\n            </Row>\r\n        \r\n        </div>\r\n    </div>\r\n    )\r\n}\r\nexport default Login;","C:\\Users\\Ajay\\OneDrive\\Desktop\\pizza-frontend-1\\src\\containers\\header.jsx",[],"C:\\Users\\Ajay\\OneDrive\\Desktop\\pizza-frontend-1\\src\\pages\\Registration.jsx",[],"C:\\Users\\Ajay\\OneDrive\\Desktop\\pizza-frontend-1\\src\\pages\\UserDashboard.jsx",["63","64","65"],"import React, { useState, useEffect } from 'react';\r\nimport Axios from 'axios';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { render } from '@testing-library/react';\r\nimport { Form, Button, Row, Col, Dropdown } from \"react-bootstrap\";\r\nimport{ pizzaSize, pizzaCrust } from \"../resources/AppData\"\r\n\r\nconst UserDashboard = () => {\r\n   console.log(pizzaSize, pizzaCrust);\r\n   const [ pizza, setPizzaList ] = useState([]);\r\n    \r\n    useEffect(() => {\r\n        let url = \"https://pizza-backend-1.herokuapp.com/pizzas\";\r\n        Axios({\r\n            method: 'GET',\r\n            url: url\r\n        })\r\n        .then((result)=>{\r\n           console.log( result, 'result');\r\n           setPizzaList(result.data.data);\r\n        })\r\n    },[]);\r\n\r\n    const renderSizes = () => {\r\n            const renderOptions = pizzaSize && pizzaSize.length>0 && pizzaSize.map((details,index) =>{\r\n                return (\r\n                    <option value={details.value}>{details.label} - {details.cost}$</option>\r\n                );\r\n            });\r\n\r\n            return (\r\n                <select>\r\n                    {renderOptions}\r\n                </select>\r\n            )\r\n    }\r\n\r\n    const renderCrust = () => {\r\n        const renderCrustOptions = pizzaCrust && pizzaCrust.length>0 && pizzaCrust.map((details,index) =>{\r\n            return (\r\n                <option value={details.value}>{details.label} - {details.cost}$</option>\r\n            );\r\n        });\r\n\r\n        return (\r\n            <select>\r\n                {renderCrustOptions}\r\n            </select>\r\n        )\r\n}\r\n\r\nconst addToCart = (event,id) => {\r\n    //console.log(id);\r\n    const existingItems = localStorage.getItem('cartItems');\r\n    if (existingItems !== null) {\r\n        localStorage.setItem('cartItems', `${existingItems},${id}`);\r\n    }else {\r\n        localStorage.setItem('cartItems', `${id}`);\r\n    }\r\n    //console.log(existingItems, 'existingItems', typeof existing)\r\n}\r\n\r\n\r\n    const renderCards = () => {\r\n        return pizza && pizza.length > 0 && pizza.map( (item, index) => {\r\n            const  {  imageUrl, name, BasePrice, toppings, newArrival, discount, _id  } = item;\r\n            return (\r\n                <Col sm={3} className=\"margin-vertical-sm\">\r\n                    <div>\r\n                        <img src={imageUrl} alt=\"test\" width='257' height='280'/>\r\n                    </div>\r\n                    <div className=\"pizzaName\">{name}</div>\r\n                    <div className=\"priceDiscount\">\r\n                        <span className=\"base\">${BasePrice}</span>\r\n                        {discount > 0 ? <span className=\"discount\">{discount}% Off</span> : \"\"}\r\n                    </div>\r\n                    <div className=\"toppings\">Toppings: <span className=\"top\">{toppings}</span></div>\r\n                    {newArrival && <div className=\"new\">New Arrival</div>}\r\n                    \r\n                        <div className=\"margin-vertical-sm\">\r\n                            {renderSizes()}\r\n                        </div>\r\n\r\n                        <div className=\"margin-vertical-sm\">\r\n                            {renderCrust()}\r\n                        </div>\r\n                    \r\n                    <div>\r\n                        <Button block variant=\"primary\" type=\"login\" onClick={event => addToCart( event, _id )}>\r\n                            Add to cart\r\n                        </Button>\r\n                    </div>\r\n\r\n                </Col>\r\n            )\r\n        });\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <Row  className=\"margin-vertical-sm\">\r\n                {renderCards()}\r\n            </Row>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default UserDashboard;","C:\\Users\\Ajay\\OneDrive\\Desktop\\pizza-frontend-1\\src\\resources\\AppData.jsx",[],"C:\\Users\\Ajay\\OneDrive\\Desktop\\pizza-frontend-1\\src\\pages\\Cart.jsx",["66","67","68","69","70"],"import React, { useState, useEffect } from 'react';\r\nimport Axios from 'axios';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { render } from '@testing-library/react';\r\nimport { Form, Button, Row, Col, Dropdown } from \"react-bootstrap\";\r\n//import{ pizzaSize, pizzaCrust } from \"../resources/AppData\"\r\n\r\n\r\nconst Cart = () => {\r\n    const [ filteredItems, setFilteredItems ] = useState([]);\r\n    \r\n    useEffect(() => {\r\n        let url = \"https://pizza-backend-1.herokuapp.com/pizzas\";\r\n        Axios({\r\n            method: 'GET',\r\n            url: url\r\n        })\r\n        .then((result)=>{\r\n            const results = result.data.data;\r\n            const existingItems = localStorage.getItem('cartItems');\r\n            const removeItems = localStorage.getItem('cartItems');\r\n            const arrayItem = existingItems.split(',');\r\n            let filteredItems = [];\r\n            arrayItem && arrayItem.length > 0 && arrayItem.forEach(details => {\r\n                 results.forEach(items => {\r\n                    if (details === items['_id']) {\r\n                        filteredItems.push(items);\r\n                    }\r\n                })\r\n            });\r\n            setFilteredItems(filteredItems);\r\n\r\n            const arrayItemdlt = removeItems.split(',');\r\n            let dltdItems = [];\r\n            arrayItemdlt && arrayItemdlt.length > 0 && arrayItemdlt.forEach(d => {\r\n                results.forEach(items => {\r\n                    if (d === items['_id']) {\r\n                        dltdItems.push(items)\r\n                    }\r\n                })\r\n            })\r\n            //console.log(filteredItems, 'filteredItems');\r\n            //console.log( result, 'result');\r\n           // setPizzaList(result.data.data);\r\n        })\r\n    },[]);\r\n\r\n    const handleDelete = (event,id) => {\r\n        const removeItems = localStorage.getItem('cartItems');\r\n        console.log(removeItems, \"test\");\r\n    if (removeItems !== null) {\r\n        localStorage.removeItem('cartItems', `${removeItems},${id}`);\r\n    }else {\r\n        localStorage.removeItem('cartItems', `${id}`);\r\n    }\r\n    }\r\n\r\n\r\n    const renderCards = () => {\r\n        return filteredItems && filteredItems.length > 0 && filteredItems.map( (item, index) => {\r\n            const  {  imageUrl, name, BasePrice, toppings, newArrival, discount, _id  } = item;\r\n            return (\r\n                <Col  className=\"margin-vertical-sm\">\r\n                    <div>\r\n                        <img src={imageUrl} alt=\"{name}\" className=\"cartImg\" width='150' height='170'/>\r\n                    </div>\r\n                    <div className=\"pizzaName\">{name}</div>\r\n                    <div className=\"priceDiscount\">\r\n                        <span className=\"base\">${BasePrice}</span>\r\n                        {discount > 0 ? <span className=\"discount\">{discount}% Off</span> : \"\"}\r\n                    </div>\r\n                    <div className=\"toppings\">Toppings: <span className=\"top\">{toppings}</span></div>\r\n                    <Button block variant=\"danger\" type=\"delete\" className=\"dltbtn\" onClick={event => handleDelete( event )}>Delete</Button>\r\n                    \r\n                    \r\n\r\n                </Col>\r\n            )\r\n        });\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <Row  className=\"margin-vertical-sm\">\r\n                {renderCards()}\r\n            </Row>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\n\r\n    export default Cart","C:\\Users\\Ajay\\OneDrive\\Desktop\\pizza-frontend-1\\src\\pages\\AdminLoginPage.jsx",[],"C:\\Users\\Ajay\\OneDrive\\Desktop\\pizza-frontend-1\\src\\pages\\Loader.jsx",[],{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","severity":1,"message":"76","line":1,"column":8,"nodeType":"77","messageId":"78","endLine":1,"endColumn":12},{"ruleId":"75","severity":1,"message":"79","line":1,"column":8,"nodeType":"77","messageId":"78","endLine":1,"endColumn":13},{"ruleId":"75","severity":1,"message":"80","line":1,"column":17,"nodeType":"77","messageId":"78","endLine":1,"endColumn":25},{"ruleId":"75","severity":1,"message":"81","line":4,"column":33,"nodeType":"77","messageId":"78","endLine":4,"endColumn":40},{"ruleId":"75","severity":1,"message":"82","line":19,"column":16,"nodeType":"77","messageId":"78","endLine":19,"endColumn":22},{"ruleId":"75","severity":1,"message":"83","line":4,"column":10,"nodeType":"77","messageId":"78","endLine":4,"endColumn":16},{"ruleId":"75","severity":1,"message":"84","line":5,"column":10,"nodeType":"77","messageId":"78","endLine":5,"endColumn":14},{"ruleId":"75","severity":1,"message":"85","line":5,"column":34,"nodeType":"77","messageId":"78","endLine":5,"endColumn":42},{"ruleId":"75","severity":1,"message":"83","line":4,"column":10,"nodeType":"77","messageId":"78","endLine":4,"endColumn":16},{"ruleId":"75","severity":1,"message":"84","line":5,"column":10,"nodeType":"77","messageId":"78","endLine":5,"endColumn":14},{"ruleId":"75","severity":1,"message":"85","line":5,"column":34,"nodeType":"77","messageId":"78","endLine":5,"endColumn":42},{"ruleId":"75","severity":1,"message":"86","line":61,"column":60,"nodeType":"77","messageId":"78","endLine":61,"endColumn":70},{"ruleId":"75","severity":1,"message":"87","line":61,"column":82,"nodeType":"77","messageId":"78","endLine":61,"endColumn":85},"no-native-reassign",["88"],"no-negated-in-lhs",["89"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'React' is defined but never used.","'useState' is defined but never used.","'Spinner' is defined but never used.","'setErr' is assigned a value but never used.","'render' is defined but never used.","'Form' is defined but never used.","'Dropdown' is defined but never used.","'newArrival' is assigned a value but never used.","'_id' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]